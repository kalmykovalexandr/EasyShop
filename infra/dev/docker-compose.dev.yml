version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: easyshop-dev-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: easyshop
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d easyshop"]
      interval: 5s
      timeout: 3s
      retries: 30

  auth-service:
    image: maven:3.9.8-eclipse-temurin-21
    container_name: easyshop-dev-auth
    working_dir: /app
    command: mvn -q -Dspring.profiles.active=dev -DskipTests spring-boot:run
    volumes:
      - ../../backend/auth-service:/app
      - m2:/root/.m2
    env_file:
      - ../../.env
    environment:
      DB_URL: ${DB_URL:-jdbc:postgresql://db:5432/easyshop}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      # если сервис читает ALLOWED_ORIGINS/JWT_SECRET — подтянет из .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "9001:9001"

  product-service:
    image: maven:3.9.8-eclipse-temurin-21
    container_name: easyshop-dev-product
    working_dir: /app
    command: mvn -q -Dspring.profiles.active=dev -DskipTests spring-boot:run
    volumes:
      - ../../backend/product-service:/app
      - m2:/root/.m2
    env_file:
      - ../../.env
    environment:
      DB_URL: ${DB_URL:-jdbc:postgresql://db:5432/easyshop}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "9002:9002"

  order-service:
    image: maven:3.9.8-eclipse-temurin-21
    container_name: easyshop-dev-order
    working_dir: /app
    command: mvn -q -Dspring.profiles.active=dev -DskipTests spring-boot:run
    volumes:
      - ../../backend/order-service:/app
      - m2:/root/.m2
    env_file:
      - ../../.env
    environment:
      DB_URL: ${DB_URL:-jdbc:postgresql://db:5432/easyshop}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "9003:9003"

  api-gateway:
    image: maven:3.9.8-eclipse-temurin-21
    container_name: easyshop-dev-gateway
    working_dir: /app
    command: mvn -q -Dspring.profiles.active=dev -DskipTests spring-boot:run
    volumes:
      - ../../backend/api-gateway:/app
      - m2:/root/.m2
    env_file:
      - ../../.env
    environment:
      # Внутренние адреса сервисов в сети compose
      AUTH_URL: ${AUTH_URL:-http://auth-service:9001}
      PRODUCT_URL: ${PRODUCT_URL:-http://product-service:9002}
      ORDER_URL: ${ORDER_URL:-http://order-service:9003}
    depends_on:
      - auth-service
      - product-service
      - order-service
    ports:
      - "8080:8080"

  web:
    image: node:20-alpine
    container_name: easyshop-dev-web
    working_dir: /app
    command: sh -lc "([ -f package-lock.json ] && npm ci --silent || npm install --silent) && npm run dev -- --host 0.0.0.0"
    volumes:
      - ../../frontend:/app
    environment:
      VITE_API_URL: http://localhost:8080
    ports:
      - "5173:5173"
    depends_on:
      - api-gateway

volumes:
  pgdata:
  m2:
