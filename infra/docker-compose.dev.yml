services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: easyshop
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10

  auth-service:
    build:
      context: ../backend
      dockerfile: auth-service/Dockerfile
    env_file:
      - ./.env
    environment:
      DB_URL: jdbc:postgresql://db:5432/easyshop
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_FLYWAY_SCHEMAS: auth
      SPRING_FLYWAY_DEFAULT_SCHEMA: auth
      SPRING_FLYWAY_CREATE_SCHEMAS: "true"
      SPRING_FLYWAY_TABLE: flyway_schema_history
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: auth
    depends_on:
      db: { condition: service_healthy }
    expose: [ "9001" ]
    ports:
      - "9001:9001"
    restart: unless-stopped

  product-service:
    build:
      context: ../backend
      dockerfile: product-service/Dockerfile
    env_file:
      - ./.env
    environment:
      DB_URL: jdbc:postgresql://db:5432/easyshop
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_FLYWAY_SCHEMAS: products
      SPRING_FLYWAY_DEFAULT_SCHEMA: products
      SPRING_FLYWAY_CREATE_SCHEMAS: "true"
      SPRING_FLYWAY_TABLE: flyway_schema_history
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: products
    depends_on:
      db: { condition: service_healthy }
    expose: [ "9002" ]
    ports:
      - "9002:9002"
    restart: unless-stopped

  purchase-service:
    build:
      context: ../backend
      dockerfile: purchase-service/Dockerfile
    env_file:
      - ./.env
    environment:
      DB_URL: jdbc:postgresql://db:5432/easyshop
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_FLYWAY_SCHEMAS: purchases
      SPRING_FLYWAY_DEFAULT_SCHEMA: purchases
      SPRING_FLYWAY_CREATE_SCHEMAS: "true"
      SPRING_FLYWAY_TABLE: flyway_schema_history
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: purchases
    depends_on:
      db: { condition: service_healthy }
    expose: [ "9003" ]
    ports:
      - "9003:9003"
    restart: unless-stopped

  api-gateway:
    build:
      context: ../backend
      dockerfile: api-gateway/Dockerfile
    env_file:
      - ./.env
    depends_on:
      auth-service: { condition: service_started }
      product-service: { condition: service_started }
      purchase-service: { condition: service_started }
    ports:
      - "8080:8080"
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    depends_on:
      api-gateway: { condition: service_started }
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  pgdata:

