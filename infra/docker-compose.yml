services:
  config-server:
    image: ${DOCKER_REGISTRY}/config-server:${IMAGE_VERSION}
    environment:
      CONFIG_SERVER_USER: ${CONFIG_SERVER_USER}
      CONFIG_SERVER_PASSWORD: ${CONFIG_SERVER_PASSWORD}
    ports:
      - "8888:8888"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: easyshop
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  auth-service:
    image: ${DOCKER_REGISTRY}/auth-service:${IMAGE_VERSION}
    environment:
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_FLYWAY_SCHEMAS: auth
      SPRING_FLYWAY_DEFAULT_SCHEMA: auth
      SPRING_FLYWAY_CREATE_SCHEMAS: "true"
      SPRING_FLYWAY_TABLE: flyway_schema_history
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: auth
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    depends_on:
      config-server: { condition: service_healthy }
      db: { condition: service_healthy }
    expose: [ "9001" ]
    ports:
      - "9001:9001"
    restart: unless-stopped

  product-service:
    image: ${DOCKER_REGISTRY}/product-service:${IMAGE_VERSION}
    environment:
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_FLYWAY_SCHEMAS: products
      SPRING_FLYWAY_DEFAULT_SCHEMA: products
      SPRING_FLYWAY_CREATE_SCHEMAS: "true"
      SPRING_FLYWAY_TABLE: flyway_schema_history
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: products
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    depends_on:
      config-server: { condition: service_healthy }
      db: { condition: service_healthy }
    expose: [ "9002" ]
    ports:
      - "9002:9002"
    restart: unless-stopped

  purchase-service:
    image: ${DOCKER_REGISTRY}/purchase-service:${IMAGE_VERSION}
    environment:
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_FLYWAY_SCHEMAS: purchases
      SPRING_FLYWAY_DEFAULT_SCHEMA: purchases
      SPRING_FLYWAY_CREATE_SCHEMAS: "true"
      SPRING_FLYWAY_TABLE: flyway_schema_history
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: purchases
      PRODUCT_SERVICE_URL: http://product-service:9002
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    depends_on:
      config-server: { condition: service_healthy }
      db: { condition: service_healthy }
      product-service: { condition: service_started }
    expose: [ "9003" ]
    ports:
      - "9003:9003"
    restart: unless-stopped

  api-gateway:
    image: ${DOCKER_REGISTRY}/api-gateway:${IMAGE_VERSION}
    environment:
      AUTH_URL: http://auth-service:9001
      PRODUCT_URL: http://product-service:9002
      PURCHASE_URL: http://purchase-service:9003
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    depends_on:
      config-server: { condition: service_healthy }
      auth-service: { condition: service_started }
      product-service: { condition: service_started }
      purchase-service: { condition: service_started }
    ports:
      - "8080:8080"
    restart: unless-stopped

  frontend:
    image: ${DOCKER_REGISTRY}/frontend:${IMAGE_VERSION}
    depends_on:
      api-gateway: { condition: service_started }
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  pgdata:
