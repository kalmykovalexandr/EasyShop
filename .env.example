# Database configuration
# JDBC connection URL
DB_URL=jdbc:postgresql://localhost:5432/easyshop
# Database username
DB_USER=postgres
# Database password
DB_PASSWORD=postgres
# Default schema for all services
DB_SCHEMA=public

# Service URLs
# Auth service base URL
AUTH_SERVICE_URL=http://localhost:9001
# Product service base URL
PRODUCT_SERVICE_URL=http://localhost:9002
# Purchase service base URL
PURCHASE_SERVICE_URL=http://localhost:9003
# API gateway base URL
API_GATEWAY_URL=http://localhost:8080
# Frontend application URL
FRONTEND_URL=http://localhost:3000
# Auth server URL for OIDC
AUTH_SERVER_URL=http://localhost:9001
# Auth server issuer for validation
AUTH_SERVER_ISSUER=http://localhost:9001

# Environment-specific service URLs
# Local environment
FRONTEND_URL_LOCAL=http://localhost:3000
API_GATEWAY_URL_LOCAL=http://localhost:8080
AUTH_SERVICE_URL_LOCAL=http://localhost:9001
PRODUCT_SERVICE_URL_LOCAL=http://localhost:9002
PURCHASE_SERVICE_URL_LOCAL=http://localhost:9003
# Test environment
FRONTEND_URL_TEST=http://test.example.com
API_GATEWAY_URL_TEST=http://api.test.example.com
AUTH_SERVICE_URL_TEST=http://auth.test.example.com
PRODUCT_SERVICE_URL_TEST=http://product.test.example.com
PURCHASE_SERVICE_URL_TEST=http://purchase.test.example.com
# Production environment
FRONTEND_URL_PROD=https://example.com
API_GATEWAY_URL_PROD=https://api.example.com
AUTH_SERVICE_URL_PROD=https://auth.example.com
PRODUCT_SERVICE_URL_PROD=https://product.example.com
PURCHASE_SERVICE_URL_PROD=https://purchase.example.com

# API configuration
# Base path for APIs
API_BASE=/api
# Complete base URL for frontend HTTP client
API_BASE_URL=http://localhost:8080/api
# HTTP client timeout in milliseconds
API_TIMEOUT=5000
# Human readable application name
APP_NAME=EasyShop
# Human readable application version
APP_VERSION=1.0.0
# Version reported by services
SERVICE_VERSION=1.0.0
# Description reported by services
SERVICE_DESCRIPTION=Sample EasyShop service
# Active Spring profile
SPRING_PROFILES_ACTIVE=local
# Enable verbose debug logging
DEBUG_MODE=true

# Routes
# Auth route prefix
AUTH_ROUTE=/auth
# Product route prefix
PRODUCTS_ROUTE=/products
# Purchase route prefix
PURCHASES_ROUTE=/purchases

# Database schemas
# Schema name for auth service
AUTH_SCHEMA=auth
# Schema name for product service
PRODUCTS_SCHEMA=products
# Schema name for purchase service
PURCHASES_SCHEMA=purchases

# OAuth clients
# SPA client id
WEBAPP_CLIENT_ID=webapp-client
# SPA client secret
WEBAPP_CLIENT_SECRET=webapp-secret
# SPA redirect URI after login
WEBAPP_REDIRECT_URI=http://localhost:3000/callback
# SPA redirect after logout
WEBAPP_POST_LOGOUT_REDIRECT_URI=http://localhost:3000/
# SPA response type
WEBAPP_RESPONSE_TYPE=code
# Requested scopes for SPA
WEBAPP_SCOPE=openid profile
# Enable silent token renewal in SPA
WEBAPP_AUTOMATIC_SILENT_RENEW=true
# Load user info endpoint in SPA
WEBAPP_LOAD_USER_INFO=true
# Use PKCE for SPA
WEBAPP_PKCE=true

# Gateway client id
GATEWAY_CLIENT_ID=gateway-client
# Gateway client secret
GATEWAY_CLIENT_SECRET=gateway-secret
# Scope requested by gateway
GATEWAY_SCOPE=internal

# Purchase service client id
PURCHASE_SERVICE_CLIENT_ID=purchase-client
# Purchase service client secret
PURCHASE_SERVICE_CLIENT_SECRET=purchase-secret
# Scope requested by purchase service
PURCHASE_SERVICE_SCOPE=internal

# Security & CORS
# Require HTTPS for auth service
REQUIRE_SSL=false
# Allowed origins for CORS
CORS_ALLOWED_ORIGINS=*
# Allowed HTTP methods for CORS
CORS_ALLOWED_METHODS=GET,POST
# Allowed headers for CORS
CORS_ALLOWED_HEADERS=*
# Allow credentials in CORS
CORS_ALLOW_CREDENTIALS=true

