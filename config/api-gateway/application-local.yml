# Local development configuration
spring:
  profiles:
    active: local
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        default_schema: ${DB_SCHEMA}

# Service URLs for local development
services:
  auth:
    url: ${AUTH_URL}
    issuer: ${AUTH_SERVER_ISSUER}
  product:
    url: ${PRODUCT_URL}
  purchase:
    url: ${PURCHASE_URL}
  api-gateway:
    url: ${API_GATEWAY_URL}

# API Routes for local development
routes:
  auth: ${AUTH_ROUTE}
  products: ${PRODUCTS_ROUTE}
  purchases: ${PURCHASES_ROUTE}

# Frontend configuration for local development
frontend:
  url: ${FRONTEND_URL}
  api-base: ${API_BASE}
  auth-server-url: ${AUTH_SERVER_URL}

# Database schemas for local development
database:
  schemas:
    auth: ${AUTH_SCHEMA}
    products: ${PRODUCTS_SCHEMA}
    purchases: ${PURCHASES_SCHEMA}

# Logging for local development
logging:
  level:
    com.easyshop: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.cloud.config: DEBUG

# OAuth2 configuration for local development
oauth2:
  clients:
    webapp:
      client-id: ${WEBAPP_CLIENT_ID}
      client-secret: ${WEBAPP_CLIENT_SECRET}
      redirect-uri: ${WEBAPP_REDIRECT_URI}
      scope: ${WEBAPP_SCOPE}
    gateway:
      client-id: ${GATEWAY_CLIENT_ID}
      client-secret: ${GATEWAY_CLIENT_SECRET}
    purchase-service:
      client-id: ${PURCHASE_SERVICE_CLIENT_ID}
      client-secret: ${PURCHASE_SERVICE_CLIENT_SECRET}

